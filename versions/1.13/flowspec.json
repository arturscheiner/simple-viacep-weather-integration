{
  "start": [
    {
      "name": "json-generator-connector",
      "type": "connector",
      "stepName": "Mocked Payload Data",
      "params": {
        "json": "{\n \"data\": {{ NOW() }},\n \"queryAndPath\":{\n \"cep\": \"12230-087\"\n }\n}",
        "failOnError": false
      },
      "id": "3848aec7-f639-4036-a735-0de702ce8e05",
      "__documentation__": ""
    },
    {
      "type": "capsule",
      "name": "capsule-v1-demo-devops-commit-message-2.0",
      "capsuleCollection": "devops",
      "capsuleCollectionVersion": 1,
      "capsule": "commit-message-2.0",
      "capsuleVersionMajor": 2,
      "capsuleVersionMinor": 0,
      "stepName": "Git Config",
      "params": {
        "gitbranch": "main",
        "gitmerge": true,
        "gittags": [
          "viacep",
          "weather"
        ],
        "commit_summary": "Novo commit no sistema listado novo",
        "commit_description": "Ultimately, the trick to structuring an exceptional commit message is to find the proper balance between brevity and detail."
      },
      "id": "8f735890-29ee-478a-9dd7-93ccecba7618"
    },
    {
      "type": "connector",
      "stepName": "Bilhetagem",
      "name": "event-publisher-connector",
      "params": {
        "eventName": "{{ DEFAULT(message.eventName, \"billing-control\") }}",
        "body": "{{ message.$ }}",
        "showSendEventLog": false,
        "stopOnError": false
      },
      "id": "4df87046-4b5e-4b9a-89ef-ec7eb4ee5ea3"
    },
    {
      "name": "json-generator-connector",
      "type": "connector",
      "stepName": "Recebe o CEP e adiciona o timestamp da requisição",
      "params": {
        "json": "{\n \"userinfo\" : {\n \"cep\" : {{ message.queryAndPath.cep }},\n \"requestTimestamp\": {{ NOW() }}\n },\n \"body\": {\n \"cep\" : {{ message.queryAndPath.cep }},\n \"requestTimestamp\": {{ NOW() }}, \n \"requestHour\": {{ FORMATDATE(NOW(), \"timestamp\", \"HH\", null, \"GMT-3\", \"pt-BR\", null) }}\n }\n\n}\n\n\n### Se existe consulta (marca data e hora da consulta) se não existe, cadastra",
        "failOnError": false
      },
      "onProcessTrack": null,
      "onExceptionTrack": null,
      "id": "9c8c71b1-76d3-4d46-a69b-298d83dcb7d7"
    },
    {
      "type": "connector",
      "name": "block-execution-connector",
      "stepName": "Block-Execution",
      "params": {
        "onProcess": "3621921d-71ac-4c22-b5a8-8225c7d9e106-onProcessTrack",
        "onException": "3621921d-71ac-4c22-b5a8-8225c7d9e106-onExceptionTrack"
      },
      "id": "3621921d-71ac-4c22-b5a8-8225c7d9e106"
    }
  ],
  "3621921d-71ac-4c22-b5a8-8225c7d9e106-onProcessTrack": [
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "a7756975-b029-40f5-a7bb-23234f15dcaf"
    }
  ],
  "3621921d-71ac-4c22-b5a8-8225c7d9e106-onExceptionTrack": [
    {
      "type": "connector",
      "name": "throw-error-connector",
      "stepName": "Throw Error",
      "params": {
        "errorMessage": "Error occurred.",
        "errorCode": 500,
        "customErrorEnabled": false
      },
      "id": "823073a2-a94b-4dba-a326-1fd82c2e171b"
    },
    {
      "type": "json-path-transformer",
      "stepName": "JSON Path Transformer",
      "jsonPath": "$.store.books[?(@.title=='IT')]",
      "failOnError": false,
      "id": "548788f6-5f2f-4204-b06e-420bcb5fdc0f"
    },
    {
      "type": "connector",
      "name": "throw-error-connector",
      "stepName": "Throw Error",
      "params": {
        "errorMessage": "Error occurred.",
        "errorCode": 500,
        "customErrorEnabled": false
      },
      "id": "f14c1e0b-5cc3-4199-92ab-ad3a1c4c3960"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "d0e34384-c138-4673-b745-d5a03e0549fa"
    }
  ]
}
