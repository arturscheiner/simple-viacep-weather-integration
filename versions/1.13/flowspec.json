{
  "start": [
    {
      "name": "json-generator-connector",
      "type": "connector",
      "stepName": "Mocked Payload Data",
      "params": {
        "json": "{\n \"data\": {{ NOW() }},\n \"queryAndPath\":{\n \"cep\": \"12230-087\"\n }\n}",
        "failOnError": false
      },
      "id": "3848aec7-f639-4036-a735-0de702ce8e05"
    },
    {
      "type": "capsule",
      "name": "capsule-v1-demo-devops-commit-message-2.0",
      "capsuleCollection": "devops",
      "capsuleCollectionVersion": 1,
      "capsule": "commit-message-2.0",
      "capsuleVersionMajor": 2,
      "capsuleVersionMinor": 0,
      "stepName": "Git Config",
      "params": {
        "gitbranch": "main",
        "gitmerge": true,
        "gittags": [
          "viacep",
          "weather"
        ],
        "commit_summary": "Novo commit no sistema listado novo",
        "commit_description": "Ultimately, the trick to structuring an exceptional commit message is to find the proper balance between brevity and detail."
      },
      "id": "8f735890-29ee-478a-9dd7-93ccecba7618"
    },
    {
      "type": "connector",
      "stepName": "Bilhetagem",
      "name": "event-publisher-connector",
      "params": {
        "eventName": "{{ DEFAULT(message.eventName, \"billing-control\") }}",
        "body": "{{ message.$ }}",
        "showSendEventLog": false,
        "stopOnError": false
      },
      "id": "4df87046-4b5e-4b9a-89ef-ec7eb4ee5ea3"
    },
    {
      "name": "json-generator-connector",
      "type": "connector",
      "stepName": "Recebe o CEP e adiciona o timestamp da requisição",
      "params": {
        "json": "{\n \"userinfo\" : {\n \"cep\" : {{ message.queryAndPath.cep }},\n \"requestTimestamp\": {{ NOW() }}\n },\n \"body\": {\n \"cep\" : {{ message.queryAndPath.cep }},\n \"requestTimestamp\": {{ NOW() }}, \n \"requestHour\": {{ FORMATDATE(NOW(), \"timestamp\", \"HH\", null, \"GMT-3\", \"pt-BR\", null) }}\n }\n\n}\n\n\n### Se existe consulta (marca data e hora da consulta) se não existe, cadastra",
        "failOnError": false
      },
      "onProcessTrack": null,
      "onExceptionTrack": null,
      "id": "9c8c71b1-76d3-4d46-a69b-298d83dcb7d7"
    },
    {
      "type": "connector",
      "name": "script-connector",
      "stepName": "Adiciona o \"greetings\" com base na hora de entrada.",
      "params": {
        "code": "var hour = body.requestHour;\n\nif(hour>=6 && hour<12) {\n output = {greetings: \"Bom Dia\"};\n}\nelse if(hour>+12 && hour<18) {\n output = {greetings: \"Boa Tarde\"};\n}\nelse {\n output = {greetings: \"Boa Noite\"};\n}\n\nfinalResult = Object.assign(body,output)\n\nbody",
        "timeout": 10000
      },
      "onProcessTrack": null,
      "onExceptionTrack": null,
      "id": "ca0553ad-defd-4621-8c29-43ee3a5bfbc7"
    },
    {
      "type": "transformer",
      "stepName": "Transforma o body em userinfo.",
      "transformSpec": [
        {
          "operation": "shift",
          "spec": {
            "output": {
              "*": "userinfo.&"
            }
          }
        }
      ],
      "onProcessTrack": null,
      "onExceptionTrack": null,
      "id": "d654e494-5e0b-4c5c-9c5a-db668260b15e"
    },
    {
      "operation": "PUT",
      "scoped": false,
      "sessionType": "LOCAL",
      "stepName": "Grava o userinfo na sessão.",
      "fields": [
        "userinfo"
      ],
      "type": "session-management",
      "onExceptionTrack": null,
      "onProcessTrack": null,
      "id": "b5989577-54a9-460a-9df3-5f7d00d27df1"
    },
    {
      "params": {
        "advanced": false,
        "disableConnectionPool": false,
        "compressBody": false,
        "stopOnServerError": false,
        "maxRetry": 0,
        "sendBinaryFile": false,
        "isInsecure": false,
        "headers": "{\"Content-Type\":\"application/json\"}",
        "operation": "GET",
        "fileName": "",
        "retry": false,
        "responseCharset": "UTF-8",
        "rawMode": false,
        "readTimeout": 30000,
        "invalidateSSLSessionsOnEveryCall": false,
        "rawModeAsBase64": false,
        "queryParams": "",
        "url": "https://viacep.com.br/ws/{{ DEFAULT(message.userinfo.cep, \"00000-000\") }}/json/",
        "connectTimeout": 30000,
        "saveAsLocalFile": false,
        "stopOnClientError": false,
        "forceHttp1": false,
        "overrideResponseCharset": true
      },
      "accountLabel": "",
      "name": "rest-connector-v2",
      "accountLabels": {
        "custom-1": "",
        "custom-2": ""
      },
      "stepName": "Acessa o VIA CEP",
      "type": "connector",
      "onExceptionTrack": null,
      "onProcessTrack": null,
      "id": "715cbb49-3a3e-4abf-90ee-2a98ff285b2b"
    },
    {
      "operation": "GET",
      "scoped": false,
      "sessionType": "LOCAL",
      "stepName": "Recupera o userinfo da sessao",
      "fields": [
        "userinfo"
      ],
      "type": "session-management",
      "onExceptionTrack": null,
      "onProcessTrack": null,
      "id": "7fab59b9-172e-408f-bc63-ddebf91f51c4"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "3bbfc7f5-7511-4d90-b9a8-8fc8a3d9d173"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "47c0a3c8-4e8c-436e-92ae-a160a85f80af"
    },
    {
      "type": "connector",
      "name": "block-execution-connector",
      "stepName": "Block-Execution",
      "params": {
        "onProcess": "3621921d-71ac-4c22-b5a8-8225c7d9e106-onProcessTrack",
        "onException": "3621921d-71ac-4c22-b5a8-8225c7d9e106-onExceptionTrack"
      },
      "id": "3621921d-71ac-4c22-b5a8-8225c7d9e106"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log depois do block do start",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "ddd8119e-070b-47f8-b438-be2f70182b17"
    }
  ],
  "3621921d-71ac-4c22-b5a8-8225c7d9e106-onProcessTrack": [
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "a7756975-b029-40f5-a7bb-23234f15dcaf"
    },
    {
      "type": "connector",
      "name": "block-execution-connector",
      "stepName": "Block-Execution",
      "params": {
        "onProcess": "b97d1510-fef9-4485-96f5-dd4e232fac58-onProcessTrack",
        "onException": "b97d1510-fef9-4485-96f5-dd4e232fac58-onExceptionTrack"
      },
      "id": "b97d1510-fef9-4485-96f5-dd4e232fac58"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log depois do block dentro do block",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "47e2da92-e86d-400b-a6bb-7f307394cc75"
    }
  ],
  "b97d1510-fef9-4485-96f5-dd4e232fac58-onProcessTrack": [
    {
      "type": "connector",
      "name": "Azure-Blob-Storage-Connector",
      "stepName": "Blob Storage (Azure)",
      "accountLabel": "azure",
      "params": {
        "operation": "upload",
        "fileName": "file.csv",
        "remoteFileName": "test.csv",
        "containerName": "container",
        "showFileLink": true,
        "failOnError": false
      },
      "id": "6e7d651d-848d-4947-b80c-5674b8ca2808"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "6ed3aa2e-42a6-49a7-9e99-55cd686e6d2d"
    },
    {
      "type": "connector",
      "name": "for-each-connector",
      "stepName": "For Each",
      "params": {
        "jsonPath": "$",
        "itemIdentifier": "",
        "parallel": false,
        "failOnError": false,
        "onProcess": "cb7f246e-50ef-4ff0-bc69-10feb3697cdd-onProcessTrack",
        "onException": "cb7f246e-50ef-4ff0-bc69-10feb3697cdd-onExceptionTrack"
      },
      "id": "cb7f246e-50ef-4ff0-bc69-10feb3697cdd"
    }
  ],
  "cb7f246e-50ef-4ff0-bc69-10feb3697cdd-onProcessTrack": [
    {
      "type": "template-transformer",
      "stepName": "Template Transformer",
      "modelPath": "body",
      "template": "<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:web=\"http://www.webservicex.net/\">\r\n   <soap:Header/>\r\n   <soap:Body>\r\n      <web:GetNAICSByID>\r\n         <!--Optional:-->\r\n         <web:NAICSCode>${naic.code}</web:NAICSCode>\r\n      </web:GetNAICSByID>\r\n   </soap:Body>\r\n</soap:Envelope>",
      "preserveOriginal": true,
      "id": "65a6e3fc-74fc-4c4d-b2e0-381f2620415f"
    },
    {
      "type": "connector",
      "name": "json-transformer-connector",
      "stepName": "JSON Transformer",
      "params": {
        "failOnError": false
      },
      "id": "1b1813dc-4412-4cc5-b86c-eb274ce16d66"
    },
    {
      "type": "transformer",
      "stepName": "Transformer (JOLT)",
      "transformSpec": [
        {
          "operation": "shift",
          "spec": {
            "body": {
              "*": "body.&"
            },
            "*": "&"
          }
        }
      ],
      "id": "5f2756bf-25da-4f94-ba6b-af72bb888403"
    }
  ],
  "cb7f246e-50ef-4ff0-bc69-10feb3697cdd-onExceptionTrack": [
    {
      "type": "json-string-to-json-transformer",
      "stepName": "JSON String to JSON Transformer",
      "jsonFieldPath": "payload",
      "preserveOriginal": true,
      "id": "1b1da311-cbac-44a0-9a14-e2d8bfffff6e"
    }
  ],
  "b97d1510-fef9-4485-96f5-dd4e232fac58-onExceptionTrack": [
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "0e8c78e2-1add-448a-91df-8d6061aed071"
    }
  ],
  "3621921d-71ac-4c22-b5a8-8225c7d9e106-onExceptionTrack": [
    {
      "type": "connector",
      "name": "throw-error-connector",
      "stepName": "Throw Error",
      "params": {
        "errorMessage": "Error occurred.",
        "errorCode": 500,
        "customErrorEnabled": false
      },
      "id": "823073a2-a94b-4dba-a326-1fd82c2e171b"
    },
    {
      "type": "json-path-transformer",
      "stepName": "JSON Path Transformer",
      "jsonPath": "$.store.books[?(@.title=='IT')]",
      "failOnError": false,
      "id": "548788f6-5f2f-4204-b06e-420bcb5fdc0f"
    },
    {
      "type": "connector",
      "name": "throw-error-connector",
      "stepName": "Throw Error",
      "params": {
        "errorMessage": "Error occurred.",
        "errorCode": 500,
        "customErrorEnabled": false
      },
      "id": "f14c1e0b-5cc3-4199-92ab-ad3a1c4c3960"
    },
    {
      "type": "connector",
      "name": "log-connector",
      "stepName": "Log",
      "params": {
        "logLevel": "ERROR",
        "message": "Error processing message {{ message.$.myField }}"
      },
      "id": "d0e34384-c138-4673-b745-d5a03e0549fa"
    }
  ]
}
